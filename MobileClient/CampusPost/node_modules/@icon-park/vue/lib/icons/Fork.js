"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _runtime = require("../runtime");

var _default = (0, _runtime.IconWrapper)('fork', false, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48"
    }
  }, [h("g", {
    "attrs": {
      "stroke": "none",
      "stroke-width": props.strokeWidth,
      "fill": "none",
      "fill-rule": "evenodd",
      "stroke-linejoin": props.strokeLinejoin
    }
  }, [h("g", {
    "attrs": {
      "transform": "translate(7.000000, 4.000000)",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth
    }
  }, [h("circle", {
    "attrs": {
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "cx": "30",
      "cy": "4",
      "r": "4"
    }
  }), h("circle", {
    "attrs": {
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "cx": "4",
      "cy": "4",
      "r": "4"
    }
  }), h("circle", {
    "attrs": {
      "fill": props.colors[1],
      "fill-rule": "nonzero",
      "cx": "17",
      "cy": "36",
      "r": "4"
    }
  }), h("path", {
    "attrs": {
      "d": "M4,8 L4,11 C4,18 17,21 17,28 L17,32 L17,28 C17,21 30,18 30,11 L30,8",
      "stroke-linecap": props.strokeLinecap
    }
  })])])]);
});

exports.default = _default;